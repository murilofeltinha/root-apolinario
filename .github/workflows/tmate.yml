name: root@apolinario VPS 24/7

on:
  schedule:
    - cron: '0 */5 * * *'  # Every 5 hours
  workflow_dispatch:

jobs:
  vps-session:
    runs-on: ubuntu-latest
    timeout-minutes: 300  # Just under 5 hours

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set hostname to apolinario
        run: sudo hostnamectl set-hostname apolinario

      - name: Download VPS backup (if any)
        uses: actions/download-artifact@v4
        with:
          name: vps-backup
          path: ./backup
        continue-on-error: true

      - name: Install prerequisites
        run: |
          sudo apt update
          sudo apt install -y tmate curl unzip sudo net-tools neofetch

      - name: Restore backup files
        run: |
          if [ -f ./backup/backup.zip ]; then
            unzip -o ./backup/backup.zip -d /
          else
            echo "No backup found, starting fresh"
          fi

      - name: Create user apolinario with sudo
        run: |
          if ! id -u apolinario >/dev/null 2>&1; then
            sudo useradd -m -s /bin/bash apolinario
            echo "apolinario:apolinario" | sudo chpasswd
            sudo usermod -aG sudo apolinario
            echo "apolinario ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/apolinario
          fi

      - name: Clone private repo with token
        run: |
          git clone https://x-access-token:${{ secrets.GH_PAT }}@github.com/murilofeltinha/vps-hycroe.git

      - name: Install Python deps and start bot
        run: |
          pip install --upgrade pip
          pip install discord.py docker psutil
          nohup python3 vps-hycroe/bot-script.py &>/dev/null &

      - name: Build Docker images
        run: |
          cd vps-hycroe
          docker build -t alpine-vps -f Dockerfile.alpine .
          docker build -t kali-vps -f Dockerfile.kali .
          docker build -t fedora-vps -f Dockerfile.fedora .
          docker build -t arch-vps -f Dockerfile.arch .
          docker build -t debian-vps -f Dockerfile.debian .
          docker build -t ubuntu-vps -f Dockerfile.ubuntu .

      - name: Start tmate session for SSH access
        uses: mxschmitt/action-tmate@v3

      - name: Show Tmate INFO
        run: |
          echo "ðŸ”‘ tmate SSH session:"
          cat $HOME/.tmate.sock/ssh

      - name: Sleep to keep VPS alive
        run: sleep 18000  # 5 hours

      - name: Backup VPS data,vps-deploy-bot,database.txt
        run: |
          sudo mkdir -p /opt/vps-backup/data
          # Backup vps-hycroe
          sudo cp -r vps-hycroe /opt/vps-backup/
          # Backup database.txt if exists
          if [ -f vps-hycroe/database.txt ]; then
            cp vps-hycroe/database.txt /opt/vps-backup/
          fi
          sudo chown -R $USER:$USER /opt/vps-backup
          zip -r backup.zip /opt/vps-backup

      - name: Upload VPS backup artifact
        uses: actions/upload-artifact@v4
        with:
          name: vps-backup
          path: backup.zip
